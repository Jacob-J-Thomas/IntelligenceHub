name: Check Bicep Installation

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        required: true
        options:
          - dev
          - prod
  push:
    branches:
      - main
      - dev

jobs:
  pipeline:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        uses: actions/checkout@v3
    - uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    # Setup Azure CLI
    - name: Setup Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: '2.66.0'

    - name: Azure Login
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    # Build and Test
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'
    - name: Restore Dependencies
      run: dotnet restore

    - name: Build and Test
      run: dotnet build && dotnet test

    # Deploy Infrastructure
    - name: Deploy Bicep
        uses: azure/CLI@v1
        with:
        inlineScript: |
          az deployment group create \
            --resource-group AppliedAI \
            --template-file infrastructure/main.bicep \
            --parameters environment=${{ github.event.inputs.environment }}

    # Deploy Application
    - name: Deploy App
      uses: azure/webapps-deploy@v2
      with:
        app-name: IntelligenceHub-${{ github.event.inputs.environment }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}

          azcliversion: latest
          az bicep version || echo "Bicep is not installed"
